name: Ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc: ['9.0.1']
        cabal: ['3.4.0.0']
        
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Haskell
      uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        
    - name: Freeze
      run: |
        cabal freeze
    - name: Cache cabal
      uses: actions/cache@v2
      id: cache-cabal
      with:
        path: '~/.cabal'
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('/src/Main.hs') }}-a
        
    - name: Cache dist
      uses: actions/cache@v2
      id: cache-bin
      with:
        path: '/dist-newstyle/'
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('/src/Main.hs') }}-b
    
    - name: cabal update and build
      run: cabal v2-build --enable-tests
    
    - name : make directory
      run: |
            mkdir binary
            mkdir binary/haskell-libs
            mkdir binary/c-libs
            ls
    
    - name: remove unneccessary libs 
      run: |
            cd ${{ steps.setup-haskell-cabal.outputs.ghc-path }}
            cd ..
            cd lib
            cd ghc-${{ matrix.ghc }}
            rm -r ghc-${{ matrix.ghc }}
            rm -r Cabal-${{ matrix.cabal }}
            rm -r rts
            
    - name: move GHC libs and configs
      run: |
            mkdir binary/haskell-libs/ghc-${{ matrix.ghc }}
            cd ${{ steps.setup-haskell-cabal.outputs.ghc-path }}
            cd ..
            cd lib
            cp -r ghc-${{ matrix.ghc }} binary/haskell-libs/ghc-${{ matrix.ghc }}
            
    - name: move installed packages
      run: | 
            mkdir binary/haskell-libs/packages
            cp -r ${{ steps.setup-haskell-cabal.outputs.cabal-store }}/ghc-${{ matrix.ghc }} binary/haskell-libs/packages
   
    #- name: change paths in config files
    #  run: |
   
    #- name: ghc-pkg recache
    #  run: | 
   
   # - name: move executable
   #   run: 
      
    #- name: zip files
    #  run: Compress-Archive -LiteralPath 'D:\a\tidal-deploy\tidal-deploy\binary\' -DestinationPath 'D:\a\tidal-deploy\tidal-deploy\binary.zip'

    #- uses: actions/upload-artifact@v2
    #  with:
    #    name: my-program
    #    path: 'D:\a\tidal-deploy\tidal-deploy\binary.zip'
